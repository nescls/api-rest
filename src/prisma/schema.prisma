generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      ="postgresql://postgres:postgres@localhost:5432/comercio?schema=public"
}

//Modelo de usuario
model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  telefono      String?
  direccion     String?
  correo        String   @unique
  password      String
  isActive      Boolean? @default(true)
  rol           Int? @default(1)
  refreshToken  String?
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @updatedAt       @db.Timestamptz(6)
  deletedAt DateTime?

  @@map("user")

  ordenes Orden[] 
}

model Producto {
  id          Int      @id @default(autoincrement())
  nombre     String   @unique
  descripcion String
  precio     Float
  stock  Int  
  isActive    Boolean @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  deletedAt  DateTime?

  @@map("producto")

  ordenProductos OrdenProductos[] 
}

model Orden {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  precioTotal  Float
  direccion   String?
  tipoOrden   TipoOrden
  estadoOrden EstadoOrden?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  deletedAt  DateTime?

  @@map("orden")

  ordenProductos OrdenProductos[] 
}

enum TipoOrden {
  pickup
  delivery
}
enum EstadoOrden {
  PENDIENTE
  EN_PROCESO
  FINALIZADO
  CANCELADO
}

model OrdenProductos {
   id          Int      @id @default(autoincrement())
  ordenId     Int      
  productoId   Int      
  cantidad     Int
  precioUnd   Float
  precioProductos Float

  @@unique ([ordenId, productoId])
  @@map("ordenProductos")

  orden Orden  @relation(fields: [ordenId], references: [id])
  producto Producto @relation(fields: [productoId], references: [id])
}